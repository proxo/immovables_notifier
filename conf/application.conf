# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="R_]1vL5ZpBWC8rDpcjR4ZC:EWAdhbjFG7Dx=LFlv[j]v8w=wc?1^pyDJK5[^P5x="

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost:5432/stocks"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
#evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

slick.default="models.*"

akka {
    log-config-on-start = on
    debug {
            # logging of all user-level messages that are processed by
            # Actors that use akka.event.LoggingReceive enable function of
            # LoggingReceive, which is to log any received message at
            # DEBUG level
            receive = on
            # enable DEBUG logging of all AutoReceiveMessages
            # (Kill, PoisonPill and the like)
            autoreceive = on
            # enable DEBUG logging of actor lifecycle changes
            # (restarts, deaths etc)
            lifecycle = on
            # enable DEBUG logging of all LoggingFSMs for events,
            # transitions and timers
            fsm = on
            # enable DEBUG logging of subscription (subscribe/unsubscribe)
            # changes on the eventStream
            event-stream = on
    }
}

